# Generated by Django 4.1 on 2022-08-26 05:45

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_association', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='GI_User_reges',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(max_length=100)),
                ('address_of_user', models.CharField(max_length=100)),
                ('email_id', models.CharField(max_length=100)),
                ('ph_num', models.CharField(max_length=100)),
                ('gi_number', models.CharField(max_length=100)),
                ('date_of_registration', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'User Registration',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='User2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfileInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('portfolio_site', models.URLField(blank=True)),
                ('profile_pic', models.ImageField(blank=True, upload_to='profile_pics')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.user')),
            ],
        ),
        migrations.CreateModel(
            name='GIAssociatationRegistrationModel',
            fields=[
                ('application_number', models.AutoField(primary_key=True, serialize=False)),
                ('name_of_applicant', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('persons_products_organization_authority', models.CharField(max_length=100)),
                ('type_of_goods', models.CharField(max_length=100)),
                ('specification', models.CharField(max_length=100)),
                ('name_of_geographical_indications', models.CharField(max_length=100)),
                ('desc_of_goods', models.CharField(max_length=100)),
                ('geo_area', models.CharField(max_length=100)),
                ('proof_of_origin', models.CharField(max_length=100)),
                ('method_of_production', models.CharField(max_length=100)),
                ('uniqueness', models.CharField(max_length=100)),
                ('inspection_body', models.CharField(max_length=100)),
                ('other', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('applied', 'APPLIED'), ('verified', 'VERIFIED'), ('approved', 'APPROVED')], default='applied', max_length=10)),
                ('is_deleted', models.BooleanField(default=False)),
                ('form_type', models.CharField(choices=[('a', 'Single Class'), ('b', 'Single Class Foreign Country'), ('c', 'Multiple Class'), ('d', 'Multiple Class Foreign Country')], default='a', max_length=2)),
                ('date_of_regestration', models.DateField(auto_now_add=True)),
                ('gi_tag', models.CharField(blank=True, max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GI_User_renual',
            fields=[
                ('application_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(max_length=100)),
                ('ph_num', models.CharField(max_length=100)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.gi_user_reges')),
            ],
        ),
        migrations.AddField(
            model_name='gi_user_reges',
            name='Association_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.giassociatationregistrationmodel'),
        ),
        migrations.CreateModel(
            name='GI_User_application_status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=100)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.gi_user_reges')),
            ],
            options={
                'verbose_name_plural': 'User Application Status',
            },
        ),
        migrations.CreateModel(
            name='GI_Association_application_status',
            fields=[
                ('application_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(max_length=100)),
                ('ph_num', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('is_deleted', models.BooleanField(default=False)),
                ('assoc_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.giassociatationregistrationmodel')),
            ],
            options={
                'verbose_name_plural': 'GI_Association_application_status',
            },
        ),
    ]
